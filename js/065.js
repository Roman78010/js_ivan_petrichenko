'use strict';

// new RegExp('pattern', 'flags');
// /pattern/flags

// const ans = prompt('Введите ваше имя');

// const re = /n/ig;
// console.log(re.test(ans));
// Проверяет на совпадение и возвращает true или false.

// const ans = prompt('Введите число');
// const re = /\d/;
// console.log(ans.match(re));

const str = 'My name is R2D2';
// console.log(str.match(/\w\d\w\d/i)); // R2D2
console.log(str.match(/\D/ig)); // R2D2

// Обратные классы:
// Все также само как и с обычными классами, только используем большую букву.
// \D - digits, ищем не цифры. 
// \W - ищем не слова, не буквы.
// \S - spaces, ищем не пробелы.
 

// Классы:
// \d - digits, ищем цифры. 
// \w - ищем все слова, буквы.
// \s - spaces, ищем пробелы.

// Флаги:
// i - если мы хотим найти что-то вне зависимости от регистра.
// g - когда мы пытаемся найти сразу несколько вхождений.
// m - включает многострочный режим (когда у нас строки с переносами).

// Флаги можно комбиеировать записывая рядом без каких-либо разделителей и пробелов.
// console.log(ans.search(re));
// console.log(ans.match(re));

// const pass = prompt('Password');

// console.log(pass.replace(/\./g, '*'));
// . - означает что мы берем все элементы которые попадут в строку. Для того что бы взять отдельно точку, нужно ее экранировать поставив перед ней обратный слеш: replace(/\./g, '*').

// console.log('12-34-56'.replace(/-/g, ':'));
