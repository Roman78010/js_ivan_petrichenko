// Функции конструктора предназначены для конструирования объектов.
// Как прототип атомобиля от которого мы можем отпочковывать потомков.
// Конструкторы нужны для создания новых однотипных объектов.
// В JS объекты это элементы.
// Классы это синтаксический сахар функций конструкторов. Изначально в JS классов не было, они появились как синтаксический сахар функций конструкторов в ES6.
function User(name, id) {
  this.name = name;
  this.id = id;
  this.human = true;
  this.hello = function() {
    console.log(`Hello ${this.name}`);
  };
}

// Когда у нас нет доступа к прототипу но нужно как-то его подкоректировать мы можем использовать свойство prototype.

User.prototype.exit = function() { // Пример:
  console.log(`Пользователь ${this.name} ушел`); // Этот метод у всех потомков которые написаны после него. // exit это произвольный метод созданный / придамыный нами.
};

const ivan = new User('Ivan', 28); // Функция конструктор создает объект.
const alex = new User('Alex', 20);

ivan.exit();

ivan.hello();
alex.hello();

console.log(ivan);
console.log(alex);